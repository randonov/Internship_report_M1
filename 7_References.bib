
@article{karypis_fast_1998,
	title = {A Fast and High Quality Multilevel Scheme for Partitioning Irregular Graphs},
	volume = {20},
	issn = {1064-8275},
	url = {http://dx.doi.org/10.1137/S1064827595287997},
	doi = {10.1137/S1064827595287997},
	abstract = {Recently, a number of researchers have investigated a class of graph partitioning algorithms that reduce the size of the graph by collapsing vertices and edges, partition the smaller graph, and then uncoarsen it to construct a partition for the original graph [Bui and Jones, Proc. of the 6th {SIAM} Conference on Parallel Processing for Scientific Computing, 1993, 445--452; Hendrickson and Leland,  A Multilevel Algorithm for Partitioning Graphs, Tech. report {SAND} 93-1301, Sandia National Laboratories, Albuquerque, {NM}, 1993]. From the early work it was clear that multilevel techniques held great promise; however, it was not known if they can be made to consistently produce high quality partitions for graphs arising in a wide range of application domains. We investigate the effectiveness of many different choices for all three phases: coarsening, partition of the coarsest graph, and refinement. In particular, we present a new coarsening heuristic (called heavy-edge heuristic) for which the size of the partition of the coarse graph is within a small factor of the size of the final partition obtained after multilevel refinement. We also present a much faster variation of the Kernighan--Lin ({KL}) algorithm for refining during uncoarsening. We test our scheme on a large number of graphs arising in various domains including finite element methods, linear programming, {VLSI}, and transportation. Our experiments show that our scheme produces partitions that are consistently better than those produced by spectral partitioning schemes in substantially smaller time. Also, when our scheme is used to compute fill-reducing orderings for sparse matrices, it produces orderings that have substantially smaller fill than the widely used multiple minimum degree algorithm.},
	pages = {359--392},
	number = {1},
	journaltitle = {{SIAM} J. Sci. Comput.},
	author = {Karypis, George and Kumar, Vipin},
	urldate = {2019-05-29},
	date = {1998-12},
	keywords = {fill-reducing orderings, finite element computations, graph partitioning, parallel computations},
	file = {Version soumise:/home/profchep/Zotero/storage/ZWPGCPIE/Karypis et Kumar - 1998 - A Fast and High Quality Multilevel Scheme for Part.pdf:application/pdf}
}

@incollection{al-baali_ampl_2015,
	location = {Cham},
	title = {The {AMPL} Modeling Language: An Aid to Formulating and Solving Optimization Problems},
	volume = {134},
	isbn = {978-3-319-17688-8 978-3-319-17689-5},
	url = {http://link.springer.com/10.1007/978-3-319-17689-5_5},
	shorttitle = {The {AMPL} Modeling Language},
	abstract = {Optimization problems arise in many contexts. Sometimes finding a good formulation takes considerable effort. A modeling language, such as {AMPL}, facilitates experimenting with formulations and simplifies using suitable solvers to solve the resulting optimization problems. {AMPL} lets one use notation close to familiar mathematical notation to state variables, objectives, and constraints and the sets and parameters that may be involved. {AMPL} does some problem transformations and makes relevant problem information available to solvers. The {AMPL} command language permits computing and displaying information about problem details and solutions returned by solvers. It also lets one modify problem formulations and solve sequences of problems. {AMPL} addresses both continuous and discrete optimization problems and offers some constraintprogramming facilities for the latter. More generally, {AMPL} permits stating and solving problems with complementarity constraints. For continuous problems, {AMPL} makes first and second derivatives available via automatic differentiation. The freely available {AMPL}/solver interface library ({ASL}) facilitates interfacing with solvers. This paper gives an overview of {AMPL} and its interaction with solvers and discusses some problem transformations and implementation techniques. It also looks forward to possible enhancements to {AMPL}.},
	pages = {95--116},
	booktitle = {Numerical Analysis and Optimization},
	publisher = {Springer International Publishing},
	author = {Gay, David M.},
	editor = {Al-Baali, Mehiddin and Grandinetti, Lucio and Purnama, Anton},
	urldate = {2019-05-29},
	date = {2015},
	langid = {english},
	doi = {10.1007/978-3-319-17689-5_5},
	file = {Gay - 2015 - The AMPL Modeling Language An Aid to Formulating .pdf:/home/profchep/Zotero/storage/LCI6HPNU/Gay - 2015 - The AMPL Modeling Language An Aid to Formulating .pdf:application/pdf}
}

@online{rothberg_gurobi_nodate,
	title = {Gurobi Optimization - The State-of-the-Art Mathematical Programming Solver},
	url = {http://www.gurobi.com/index},
	author = {Rothberg, Edward and Bixby, Robert and Gu, Zonghao},
	urldate = {2019-05-29},
	file = {Gurobi Optimization - The State-of-the-Art Mathematical Programming Solver:/home/profchep/Zotero/storage/4JTWWAAP/index.html:text/html}
}

@article{yang_nanosim:_2017,
	title = {{NanoSim}: nanopore sequence read simulator based on statistical characterization},
	volume = {6},
	url = {https://academic.oup.com/gigascience/article/6/4/gix010/3051934},
	doi = {10.1093/gigascience/gix010},
	shorttitle = {{NanoSim}},
	abstract = {{AbstractBackground}.  The {MinION} sequencing instrument from Oxford Nanopore Technologies ({ONT}) produces long
            read lengths from single-molecule sequen},
	number = {4},
	journaltitle = {{GigaScience}},
	shortjournal = {Gigascience},
	author = {Yang, Chen and Chu, Justin and Warren, René L. and Birol, Inanç},
	urldate = {2019-05-29},
	date = {2017-04-01},
	langid = {english},
	file = {Full Text PDF:/home/profchep/Zotero/storage/M9DC45BU/Yang et al. - 2017 - NanoSim nanopore sequence read simulator based on.pdf:application/pdf;Snapshot:/home/profchep/Zotero/storage/5L79RY3M/3051934.html:text/html}
}

@misc{JBCB-1002,
Author = { Rumen Andonov and Hristo Djidjev and Sebastien Fran{\c{c}}ois and Dominique Lavenier},
Title = {Complete Assembly of Circular and  Chloroplast Genomes Based on Global Optimization},
  year = {2019},
  Journal = {Journal of Bioinformatics and Computational Biology},
   howpublished = {Ref.:  Ms. No. JBCB-1002 (in print)}
}


@article{endm18,
	Author = {Sebastien Fran{\c{c}}ois and Rumen Andonov and Dominique Lavenier and Hristo Djidjev},
	Bibsource = {dblp computer science bibliography, https://dblp.org},
	Biburl = {https://dblp.org/rec/bib/journals/endm/FrancoisALD18},
	Doi = {10.1016/j.endm.2018.01.020},
	Journal = {Electronic Notes in Discrete Mathematics},
	Pages = {185--194},
	Timestamp = {Mon, 26 Feb 2018 15:22:37 +0100},
	Title = {Global Optimization for Scaffolding and Completing Genome Assemblies},
	Url = {https://doi.org/10.1016/j.endm.2018.01.020},
	Volume = {64},
	Year = {2018},
	Bdsk-Url-1 = {https://doi.org/10.1016/j.endm.2018.01.020}}


@article{Chloroplast,
	Author = {S. Fran\c{c}ois and R. Andonov and D. Lavenier and H. Djidjev},
	Doi = {10.1101/231324},
	Journal = {bioRxiv},
	Title = {Global optimization approach for circular and chloroplast genome assembly},
	Url = {https://www.biorxiv.org/content/early/2017/12/11/231324},
	Year = {2017},
	Bdsk-Url-1 = {https://www.biorxiv.org/content/early/2017/12/11/231324},
	Bdsk-Url-2 = {https://doi.org/10.1101/231324}}
	
@inproceedings{BICoB2018,
	Author = {S. Fran\c{c}ois and R. Andonov and D. Lavenier and H. Djidjev},
	Booktitle = {10th International Conference on Bioinformatics and Computational Biology (BICoB 2018)},
	Note = {Mars, 2018, Las Vegas, USA},
	Title = {Global Optimization Approach for Circular and Chloroplast Genome Assemblies},
	Year = {2018}}
	
